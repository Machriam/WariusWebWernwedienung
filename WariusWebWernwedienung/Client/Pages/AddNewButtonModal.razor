@using Blazored.Modal;
<div class="col-md-12 d-flex flex-column" style="height:500px;width:300px">
    <div>
        <label>Filename:</label>
        <select class="form-select" @onchange="@(args=>ButtonInformation.Filename=args.Value?.ToString()??"")">
            <option value=""></option>
            @foreach (var file in FileNames)
            {
                <option value="@file">@file</option>
            }
        </select>
    </div>
    <div>
        <label>Buttonname:</label>
        <input class="form-control" @bind-value="ButtonInformation.Label" />
    </div>
    <div>
        <label>Parameter:</label>
        <input class="form-control" @bind-value="ButtonInformation.Parameter" />
    </div>
    <div>
        <label>Dynamic Parameter</label>
        <input type="checkbox" class="form-check" @bind-value="ButtonInformation.DynamicParameter" />
    </div>
    <button class="btn btn-primary mt-5" @onclick="Close">Add Button</button>
</div>
@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; } = default!;
    public ButtonInformation ButtonInformation = new();
    [Parameter] public List<string> FileNames { get; set; } = new();
    public void Close()
    {
        ModalInstance.CloseAsync(ModalResult.Ok<ButtonInformation>(ButtonInformation));
    }
}

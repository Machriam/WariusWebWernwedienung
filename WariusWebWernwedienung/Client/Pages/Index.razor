@page "/"
@using System.Text.Json;
@using WariusWebWernwedienung.Shared;

<PageTitle>Wernwedienung</PageTitle>
<p class="">Current count: @_currentCount</p>
<button @onclick="SendText" style="background-color:darkgrey" class="btn m-2">Send Text</button>
<Section></Section>
@code {
    [CascadingParameter] private IModalService ModalService { get; set; } = default!;
    [Inject] private ILocalStorageInterop LocalStorageInterop { get; set; } = default!;
    [Inject] private IModalHelper ModalHelper { get; set; } = default!;
    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;
    [Inject] private EventBus EventBus { get; set; } = default!;
    [Inject] private IRemoteControlService RemoteControlService { get; set; } = default!;
    private List<string> _executableScripts = new();
    private int _currentCount = 0;
    protected override async Task OnInitializedAsync()
    {
        ModalHelper.InitializeModalService(ModalService, JSRuntime);
        EventBus.ButtonClicked += OnButtonClicked;
        _executableScripts = (await RemoteControlService.GetExecutableScripts())?.ToList() ?? new();
        await base.OnInitializedAsync();
    }

    private async Task SendText()
    {
        var newInformation = await ModalHelper.ShowModal<SendKeysModal, ButtonInformation>("Send Keys", new()
        {
            {nameof(AddNewButtonModal.FileNames),_executableScripts}
        });
        if (newInformation == null) return;
        await RemoteControlService.SendRemoteControl(new RemoteControlParameter()
            {
                FileName = newInformation.Filename,
                Parameter = newInformation.Parameter
            });
        EventBus.OnButtonClicked();
    }

    public void OnButtonClicked()
    {
        _currentCount++;
        StateHasChanged();
    }
}
